cache:
  - c:\cargo\registry
  - c:\cargo\git

init:
  - mkdir c:\cargo
  - mkdir c:\rustup
  - SET PATH=c:\cargo\bin;%PATH%

clone_folder: c:\git-brws

environment:
  CARGO_HOME: "c:\\cargo"
  RUSTUP_HOME: "c:\\rustup"
  CARGO_TARGET_DIR: "c:\\git-brws\\target"
  global:
    RUST_BACKTRACE: full
  matrix:
    - TARGET: x86_64-pc-windows-msvc
      BITS: 64
    - TARGET: i686-pc-windows-msvc
      BITS: 32

# Install Rust and Cargo
# (Based on from https://github.com/rust-lang/libc/blob/master/appveyor.yml)
install:
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - if defined MSYS2 set PATH=C:\msys64\mingw%BITS%\bin;%PATH%
  - rustc -V
  - cargo -V

build: false

test_script:
  - git fetch origin master
  - git checkout -b master
  - git checkout -
  - git rev-parse HEAD
  - cd "c:\\git-brws"
  - cargo test --verbose
  - cargo build

before_deploy:
  # Generate artifacts for release
  - cargo build --release
  - mkdir staging
  - copy target\release\git-brws.exe staging
  - copy README.md staging
  - copy LICENSE.txt staging
  - copy git-brws.1 staging
  - cd staging
  # release zipfile will look like 'git-brws-1.2.3-x86_64-pc-windows-msvc'
  - 7z a ../git-brws-%APPVEYOR_REPO_TAG_NAME%-%TARGET%.zip *
  - appveyor PushArtifact ../git-brws-%APPVEYOR_REPO_TAG_NAME%-%TARGET%.zip

deploy:
  # https://help.appveyor.com/discussions/problems/2975-github-deployment
  description: ""
  artifact: /.*\.zip/
  auth_token:
    secure: BpQjnOw9ebli0aAKCxskQvdu28Ahj8D9ByDoNFbEgRRtWKEbqESWLiZnHyQIgR5m
  provider: GitHub
  # deploy when a new tag is pushed and only on the stable channel
  on:
    appveyor_repo_tag: true

notifications:
  - provider: Email
    to: lin90162@yahoo.co.jp
    on_build_status_changed: true
    on_build_success: false
    on_build_failure: false
